#=====================jsp config==================
# 页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
# 响应页面默认后缀
spring.mvc.view.suffix=.jsp
#页面热加载
spring.thymeleaf.cache = false
#jsp修改不生效
server.servlet.jsp.init-parameters.development=true

#=====================database config==================
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/demo?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=false
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


#=====================servlet container config==================
server.port=8081
server.servlet.context-path=/test
#server.ssl.enabled=false
#always include stacktrace
#server.error.include-stacktrace=always


#=====================mybatis config==================
#mybatis.config-location=classpath:mybatis-config.xml
#起别名。可省略写mybatis的xml中的resultType的全路径
mybatis.type-aliases-package=com.yesx.ssm.po
#Mybatis扫描(配置xml模式使用)
mybatis.mapper-locations=classpath*:mapper/*.xml
#开启驼峰命名转换Table:create_time到 Entity(createTime)
#mybatis.configuration.map-underscore-to-camel-case=true
#使用列别名替换列名 默认值为true select name as title(实体中的属性名是title) form table;开启后mybatis会自动帮我们把表中name的值赋到对应实体的title属性中
#mybatis.configuration.useColumnLabel=true
#使用jdbc的getGeneratekeys获取自增主键值
#mybatis.configuration.useGeneratedKeys=true

#===================== solr ==================
#spring.data.solr.host=http://localhost:8983/solr/new_core
spring.data.solr.host=http://localhost:8983/solr/mysql_core


#################redis配置#################
spring.redis.host=127.0.0.1
spring.redis.port=6379    
spring.redis.jedis.pool.max-active=8    
spring.redis.jedis.pool.max-wait=-1    
spring.redis.jedis.pool.max-idle=8    
spring.redis.jedis.pool.min-idle=0    
spring.redis.timeout=0
spring.redis.password=
